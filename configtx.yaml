################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities--which---will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    - &OrdererMSP
        Name: OrdererMSP
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/example.com/msp

    - &Assurance
        Name: Assurance
        ID: Assurance
        MSPDir: crypto-config/peerOrganizations/assurance.example.com/msp/
        AnchorPeers:
            - Host: peer0-assurance
              Port: 7051

    - &Isp1
        Name: Isp1
        ID: Isp1
        MSPDir: crypto-config/peerOrganizations/isp1.example.com/msp/
        AnchorPeers:
            - Host: peer0-isp1
              Port: 7051

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.3.x
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.3.0 or later.
        V1_3: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.1.x
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.1 orderer capabilities, ensure that all
        # orderers on a channel are at v1.1.0 or later.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3.
        V1_3: true
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false


################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters.
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network.
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    # Policies:
    #     Readers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Readers"
    #     Writers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Writers"
    #     Admins:
    #         Type: ImplicitMeta
    #         Rule: "MAJORITY Admins"

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters.
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start.
    # Available types are "solo" and "kafka".
    OrdererType: solo

    Addresses:
        - orderer0:7050

    # Batch Timeout: The amount of time to wait before creating a batch.
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block.
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a
        # batch.
        MaxMessageCount: 1000

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch. If the "kafka" OrdererType is
        # selected, set 'message.max.bytes' and 'replica.fetch.max.bytes' on the
        # Kafka brokers to a value that is equal to or larger than this one.
        AbsoluteMaxBytes: 990 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the
        # preferred max bytes will result in a batch larger than preferred max
        # bytes.
        PreferredMaxBytes: 5120 KB

    # Max Channels is the maximum number of channels to allow on the ordering
    # network. When set to 0, this implies no maximum number of channels.
    MaxChannels: 0

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects.
        # NOTE: Use IP:port notation
        Brokers:
            - kafka:9092

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network.
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    # Policies:
    #     Readers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Readers"
    #     Writers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Writers"
    #     Admins:
    #         Type: ImplicitMeta
    #         Rule: "MAJORITY Admins"
    #     # BlockValidation specifies what signatures must be included in the block
    #     # from the orderer for the peer to validate it.
    #     BlockValidation:
    #         Type: ImplicitMeta
    #         Rule: "ANY Writers"
            
################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies Channel: &ChannelDefaults defines the set change of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    # Policies:
    #     # Who may invoke the 'Deliver' API
    #     Readers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Readers"
    #     # Who may invoke the 'Broadcast' API
    #     Writers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Writers"
    #     # By default, who may modify elements at this config level
    #     Admins:
    #         Type: ImplicitMeta
    #         Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profiles
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool.  The profiles which specify consortiums
#   are to be used for generating the orderer genesis block.  With the correct
#   consortium members defined in the orderer genesis block, channel creation
#   requests ChannelDefaults may be generated with only the org member names and a consortium name
#
################################################################################
Profiles:

    Genesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererMSP
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            AdminConsortium:
                Organizations:
                - *Assurance
            MemberConsortium:
                Organizations:
                - *Assurance
                - *Isp1

    Audit:
        Consortium: AdminConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Assurance
            Capabilities:
                <<: *ApplicationCapabilities
    Public:
        Consortium: MemberConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Assurance
                - *Isp1
            Capabilities:
                <<: *ApplicationCapabilities